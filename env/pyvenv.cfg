from fastapi import FastAPI, HTTPException
from typing import Dict
from uuid import uuid4
from models import Factura, Pago

app = FastAPI()

# Base de datos en memoria (diccionario)
facturas_db: Dict[str, dict] = {}


@app.post("/factura/crear")
def crear_factura(factura: Factura):
    factura_id = str(uuid4())
    facturas_db[factura_id] = {
        "id": factura_id,
        "cliente": factura.cliente,
        "monto": factura.monto,
        "descripcion": factura.descripcion,
        "estado": "pendiente"
    }
    return {"id": factura_id, "mensaje": "Factura creada correctamente"}


@app.post("/pago/realizar/{factura_id}")
def realizar_pago(factura_id: str, pago: Pago):
    if factura_id not in facturas_db:
        raise HTTPException(status_code=404, detail="Factura no encontrada")
    
    facturas_db[factura_id]["estado"] = "pagada"
    facturas_db[factura_id]["metodo_pago"] = pago.metodo_pago

    return {"mensaje": f"Pago realizado correctamente para la factura {factura_id}"}


@app.get("/factura/{factura_id}")
def obtener_factura(factura_id: str):
    if factura_id not in facturas_db:
        raise HTTPException(status_code=404, detail="Factura no encontrada")
    
    return facturas_db[factura_id]
